plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.8'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.kosa'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'             // websocket
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.3'          // mybatis
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'            // Swagger
    implementation 'org.springframework.boot:spring-boot-starter-security'              // security
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'	// aws s3
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'         // OAuth2.0
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'            // Redis
    implementation 'org.springframework.boot:spring-boot-starter-mail'                  // mail
    implementation 'org.springframework.boot:spring-boot-starter-actuator'              // actuator

    implementation 'io.jsonwebtoken:jjwt-api:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.5'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.5'

    developmentOnly 'org.springframework.boot:spring-boot-devtools' // devtools

    runtimeOnly 'com.mysql:mysql-connector-j'                       // mysql
    compileOnly 'org.projectlombok:lombok'                          // lombok
    annotationProcessor 'org.projectlombok:lombok'                  // lombok

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.3'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}
processResources.dependsOn('copySecret')

tasks.register('copySecret', Copy) {
    from './kosa-spring-cloud-config' // 서브모듈 디렉토리 경로
    include "application*.yml"  // 복사할 파일들
    into 'src/main/resources'  // 복사 위치
}
