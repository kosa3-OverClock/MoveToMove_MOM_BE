<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kosa.kosafinalprojbackend.mybatis.mappers.kanbancard.KanbanCardMapper">

  <!-- 칸반 카드 확인 -->
  <select id="existsByKanbanCardId" parameterType="Long" resultType="boolean">
    SELECT EXISTS (SELECT 1
                     FROM kanban_cards
                    WHERE kanban_card_id = #{kanbanCardId}) AS result
  </select>

  <!-- 칸반 카드 상세 조회 -->
  <select id="selectKanbanCard" parameterType="Long" resultType="com.kosa.kosafinalprojbackend.domains.kanban.column.model.dto.KanbanColumnInCardDto">
    SELECT kco.kanban_column_id
         , kco.kanban_column_name
         , kco.column_seq
         , kca.kanban_card_id
         , kca.title
         , kca.content
         , kca.card_seq
         , kca.priority
         , kca.task_size
         , kca.start_at
         , kca.end_at
         , kca.created_at
      FROM kanban_cards         kca
INNER JOIN kanban_columns       kco
        ON kco.kanban_column_id = kca.kanban_column_id
     WHERE kca.kanban_card_id = #{kanbanCardId}
       AND kco.deleted_at       IS NULL
       AND kca.deleted_at       IS NULL
  </select>

  <!-- 칸반 카드 담당자 조회 -->
  <select id="selectKanbanCardMember" parameterType="Long" resultType="com.kosa.kosafinalprojbackend.domains.kanban.card.domain.dto.CardMemberDto">
    SELECT kw.member_id
         , me.email
         , me.nick_name
         , me.profile_url
      FROM kanban_works         kw
INNER JOIN members              me
        ON me.member_id         = kw.member_id
     WHERE kw.kanban_card_id    = #{kanbanCardId}
       AND me.deleted_at        IS NULL
  </select>

  <!-- 칸반 카드 코멘트 조회 -->
  <select id="selectKanbanCardComment" parameterType="Long" resultType="com.kosa.kosafinalprojbackend.domains.kanban.card.domain.dto.CardCommentDto">
    SELECT co.comment_id
         , co.member_id
         , co.content
         , co.created_at
         , me.email
         , me.nick_name
         , me.profile_url
      FROM comment              co
INNER JOIN members              me
        ON me.member_id         = co.member_id
     WHERE co.kanban_card_id    = #{kanbanCardId}
       AND me.deleted_at        IS NULL
       AND co.deleted_at        IS NULL
  ORDER BY co.created_at
  </select>

  <!-- 칸반 카드 담당자 삭제 -->
  <delete id="deleteKanbanCardMember" parameterType="Long">
    DELETE
      FROM kanban_works
     WHERE kanban_card_id = #{kanbanCardId}
  </delete>

  <!-- 칸반 카드 담당자 저장 -->
  <delete id="insertKanbanCardMember" parameterType="Long">
    INSERT
      INTO kanban_works
         ( kanban_card_id
         , member_id
         )
    VALUES
      <foreach collection="memberList" item="memberId" separator=",">
         ( #{kanbanCardId}
         , #{memberId}
         )
      </foreach>
  </delete>

  <!-- 칸반 카드 수정 -->
  <update id="updateKanbanCard">
    UPDATE kanban_cards
    <set>
      ${cardUpdateForm.updateColumn} = #{cardUpdateForm.updateData},
      updated_at = NOW()
    </set>
     WHERE kanban_card_id = #{kanbanCardId}
  </update>

  <!-- 칸반 카드 위치 수정 -->
  <update id="updateLocationKanbanCard">
    UPDATE kanban_cards
       SET kanban_column_id = #{cardLocationForm.kanbanColumnId}
         , card_seq         = #{cardLocationForm.cardSeq}
         , updated_at       = NOW(3)
     WHERE kanban_card_id   = #{kanbanCardId}
  </update>

  <!-- 컬럼의 카드 순서 변경 -->
  <update id="updateKanbanCardSeq">
    UPDATE kanban_cards
       SET card_seq         = card_seq + 1
         , updated_at       = NOW(3)
     WHERE kanban_column_id = #{cardLocationForm.kanbanColumnId}
     <choose>
       <when test="symbol">
       AND card_seq > #{cardLocationForm.cardSeq}
       </when>
       <otherwise>
       AND card_seq >= #{cardLocationForm.cardSeq}
       </otherwise>
     </choose>
  </update>

  <!-- 이전 컬럼 카드 순서 변경 -->
  <update id="updatePreKanbanCardSeq">
    UPDATE kanban_cards     kc
INNER JOIN (SELECT kanban_card_id
                 , ROW_NUMBER() OVER (ORDER BY card_seq, updated_at
                    <choose>
                      <when test="orderBy == 'ASC'"> ASC </when>
                      <when test="orderBy == 'DESC'"> DESC </when>
                    </choose>) new_seq
              FROM kanban_cards
             WHERE kanban_column_id = #{kanbanColumn}) kc2
        ON kc2.kanban_card_id   = kc.kanban_card_id
       SET kc.card_seq          = kc2.new_seq
     WHERE kc.kanban_column_id  = #{kanbanColumn}
  </update>

  <!-- 칸반 카드 삭제 -->
  <update id="deleteKanbanCard" parameterType="Long">
    UPDATE kanban_cards
       SET deleted_at       = NOW()
     WHERE kanban_card_id   = #{kanbanCardId}
  </update>

  <!-- 카드 코멘트 저장 -->
  <insert id="insertComment"
    useGeneratedKeys="true" keyProperty="commentForm.commentId">
    INSERT
      INTO comment
         ( kanban_card_id
         , member_id
         , content
         )
    VALUES
         ( #{kanbanCardId}
         , #{memberId}
         , #{commentForm.content}
         )
  </insert>
</mapper>

